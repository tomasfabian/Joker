@page "/"
@page "/products"
@inherits ProductsPageComponentBase

<h1>All products</h1>
<section>
    @if (ViewModel.ProductsListViewModel?.Items == null)
    {
        <p><em>Initializing...</em></p>
    }
    else
    {
        <div class="col-12 row">
            <div class="col-3 row align-items-center">
                <b class="col-auto">Is loading: </b>
                <span class="col-auto">@ViewModel.ProductsListViewModel?.IsLoading</span>
            </div>
            <div class="col-3 row align-items-center">
                <b class="col-auto">Is offline: </b>
                <span class="col-auto">@ViewModel.IsOffline</span>
            </div>
        </div>

        @if (ViewModel != null)
        {
            <div class="col-12 row">
                <EditForm class="form-inline" Model="@ViewModel" OnValidSubmit="@(e => ViewModel.AddNew.Execute(null))">
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    <ValidationSummary></ValidationSummary>
                    <div class="form-group">
                        <label for="newProductName" class="col-form-label">Name </label>
                        <div>
                            <input class="form-control" id="newProductName" @bind="@ViewModel.NewProductName" @bind:event="oninput" placeholder="Enter new product name" />
                            <ValidationMessage class="offset-sm-3" For="@(() => ViewModel.NewProductName)"></ValidationMessage>
                        </div>
                    </div>

                    <button disabled="@(!ViewModel.AddNew.CanExecute(null))" type="submit" class="btn btn-primary" style="margin-top: 5px;">
                        <span class="oi oi-plus" title="add" aria-hidden="true" style="color: #fff"> Add</span>
                    </button>
                </EditForm>
            </div>
        }

        <div class="col-12 row">

            <div class="col-8 row">

                @if (ViewModel.ProductsListViewModel != null)
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th style="width:auto;text-align:left">Name</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in ViewModel.ProductsListViewModel?.Items)
                            {
                                <tr @key="product.Id" @onclick="@(() => ViewModel.ProductsListViewModel.SelectedItem = product)">
                                    <td>
                                        @product.Name
                                    </td>

                                    <td>
                                        <button class="btn btn-danger" @onclick="e => product.Delete.Execute(null)">
                                            <span class="oi oi-trash" title="delete" aria-hidden="true" style="color: #fff"></span>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>

            @if (ViewModel.ProductsListViewModel?.SelectedItem != null)
            {
                <div class="col-4">

                    <h2>Product detail</h2>

                    <EditForm Model="@ViewModel.ProductsListViewModel.SelectedItem" OnValidSubmit="@UpdateProduct">

                        <DataAnnotationsValidator></DataAnnotationsValidator>
                        <ValidationSummary></ValidationSummary>
                        <div class="form-group row">
                            <label for="productName" class="col-sm-4 col-form-label">Name</label>
                            <div class="col-sm-8">
                                <InputText class="form-control col-sm-8" id="productName" @bind-Value="@ViewModel.ProductsListViewModel.SelectedItem.Renamed" placeholder="Enter product name" />
                                <ValidationMessage class="offset-sm-3" For="@(() => ViewModel.ProductsListViewModel.SelectedItem.Renamed)"></ValidationMessage>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary edit-btn">
                            <span class="oi oi-pencil" title="update" aria-hidden="true" style="color: #fff"></span> Update
                        </button>
                    </EditForm>
                </div>
            }
        </div>

        <ModalDialog></ModalDialog>
    }
</section>